import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.tilecraft.matchgame"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 8
        versionName "1.0.7"

        manifestPlaceholders = [
                THEONTHE_BASE_URL         : "key=http://api.commom.pangbaoapp.com",
                THEOTHE_VEST_ID           : "key=cce73dac-0333-4e73-8591-2734fba03117",
                THEOTHE_PRODUCT_ID        : "key=2739018f-5068-48ab-8286-ee3a1c0e28ce",
                CHANNEL_VALUE             : "test",
                "icon"                    : "@mipmap/ic_launcher",
                THEOTHE_PLATFROM_PUBLICKEY: "key=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCVFZ/TTuY+1X9HKhuRS7EP6Yr6n09ARcGEJetPBDp3uKgDITa3ZA+leX2Sx3PJUYCDv8NudlmLThHwd/s5IcdlQ4Ff7xhqIjG/zB7clJXc4SphvunfaJJsTHnOD3td11RXvqKXrLuJEGFtP8maWnCJImAHhW67mAH/Y8C/O2m9pQIDAQAB",
                THEOTHE_APP_SECRETSALT    : "key=CAE8B3475583430B",
        ]
        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }
        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("../../../cocos2d-x"),
                                        project.file("../../../cocos2d-x/cocos"),
                                        project.file("../../../cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    } else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect { it as String })
                }
            }
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('../squarecleaner.jks')
            storePassword "123456"
            keyAlias "square"
            keyPassword "123456"
        }
        debug {
            storeFile file('../squarecleaner.jks')
            storePassword "123456"
            keyAlias "square"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssetsProvider.get().doLast {
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}/res"
            into "${outputDir}/res"
        }

        copy {
            from "${sourceDir}/subpackages"
            into "${outputDir}/subpackages"
        }

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation fileTree(dir: "../../../cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
//    implementation files('libs/miit_mdid_1.0.10.aar')
    implementation project(':libcocos2dx')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Facebook
    implementation 'com.facebook.android:facebook-android-sdk:5.15.3'
    // Facebook 广告
    implementation 'com.facebook.android:audience-network-sdk:5.11.0'

    // Google Firebase Analytics 分析
    implementation 'com.google.firebase:firebase-analytics:17.4.4'
    // Google AdMob 广告
    implementation 'com.google.android.gms:play-services-ads:19.3.0'

    // UnityAds 广告
    implementation 'com.unity3d.ads:unity-ads:3.4.6'

    // ironSource
    implementation 'com.ironsource.sdk:mediationsdk:6.18.0'
    // ironSource 需要集成 Google Play Services
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.0'
    implementation 'com.google.android.gms:play-services-basement:17.3.0'
    // ironSource 聚合适配器
    implementation 'com.ironsource.adapters:admobadapter:4.3.12'
    implementation 'com.ironsource.adapters:facebookadapter:4.3.19'
    implementation 'com.ironsource.adapters:unityadsadapter:4.3.5'

    // Branch
    implementation 'io.branch.sdk.android:library:5.0.3'
    implementation 'com.google.firebase:firebase-appindexing:19.1.0'

    // Retrofit网络框架
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    // Android组件异步通信的框架
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // 使用RxJava过程中管理Activity和Fragment生命周期能力的框架
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'

    // 公共服务
    implementation('com.thieonesdk.lib:theone-commonsdk-gp:1.5.6.7-alpha@aar') {
        transitive = true //SDK中pom文件下的依赖需要引进来
    }
    configurations {
        all*.exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        all*.exclude group: 'com.squareup.okio', module: 'okio'
    }
    //支付
    implementation 'com.android.billingclient:billing:3.0.0'


}
